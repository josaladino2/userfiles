# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

if [ -f /tmp/.echo ]; then
  echo "Using: $(pwd)/.zshrc@1"
fi

# Shells is interactive
export OS=$(uname)

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

ZSH_DISABLE_COMPFIX=true

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
#ZSH_THEME="agnoster"
ZSH_THEME="powerlevel10k/powerlevel10k"

CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Define how often to auto-update (in days).
export UPDATE_ZSH_DAYS=1

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# Configure history stamp format
HIST_STAMPS="yyyy-mm-dd"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
	git
	zsh-completions
	zsh-syntax-highlighting
	zsh-autosuggestions
	zsh-history-substring-search
	zsh-navigation-tools
	zsh_reload
	brew
	colorize
	docker
	textmate
	ruby
	zsh-256color
	command-not-found
	colored-man-pages
	vi-mode
	sudo
	gnu-utils
	sublime
	asciidoctor
	betterbrew
	copyzshell
	enhancd
	k
	mysql-colorize
)

# For tracing how this file is run
zmodload zsh/zprof

# Include Powerline10k settings here
export DEFAULT_USER=$(printf "$USER")
POWERLEVEL10K_MODE='flat'
POWERLEVEL10K_MODE='compatible'
POWERLEVEL10K_SHORTEN_DIR_LENGTH=3
# Hide the branch icon
POWERLEVEL10K_HIDE_BRANCH_ICON=true
POWERLEVEL10K_PROMPT_ON_NEWLINE=true
#POWERLEVEL10K_MULTILINE_FIRST_PROMPT_PREFIX="↱"
#POWERLEVEL10K_MULTILINE_SECOND_PROMPT_PREFIX="↳ "
POWERLEVEL10K_TIME_FOREGROUND='green'
POWERLEVEL10K_TIME_BACKGROUND='white'
POWERLEVEL10K_ALWAYS_SHOW_CONTEXT=true
POWERLEVEL10K_DISABLE_GITSTATUS=true
ZLE_RPROMPT_INDENT=0
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff00ff,bg=cyan,bold,underline"

# Settings

source $ZSH/oh-my-zsh.sh
# See more source loads at the end of this file

# User configuration

# Setup $PATH ENV Settings
if [ -f "${HOME}/.zsh_PATH" ]; then
  source "${HOME}/.zsh_PATH"
fi

export PATH="/usr/local/bin:$PATH"
# remove duplicate path entries
export PATH=$(echo "$PATH" | awk -F: ' { for (i = 1; i <= NF; i++) arr[$i]; } END { for (i in arr) printf "%s:" , i; printf "\n"; } ')
if [ -f /tmp/.echo ]; then
  echo "Using: $(pwd)/.zshrc@2"
fi

#( cd ${myzfuncs}
#	for i in *
#	do
#		autoload ${i}
#	done )

# export MANPATH="/usr/local/man:$MANPATH"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# add colors function
#if [ -f "${HOME}/.zsh_colors" ]; then
#  source "${HOME}/.zsh_colors"
#fi
# enable color support of ls and also add handy aliases
if [ -x /usr/local/bin/gdircolors ]; then
  if [ -r ~/.dircolors ]; then
    eval "$(gdircolors -b ~/.dircolors)"
  else
    eval "$(gdircolors -b)"
  fi
fi
#color_prompt=yes
#if [ -n "$force_color_prompt" ]; then
#  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
# We have color support; assume it's compliant with Ecma-48
# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
# a case would tend to support setf rather than setaf.)
#    color_prompt=yes
#  else
#    color_prompt=
#  fi
#fi

if [ -f /tmp/.echo ]; then
	echo "Using: $(pwd)/.zshrc@3"
fi

# Setup History parameters

# don't put duplicate lines in the history. See zsh(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace
# for setting history length see HISTSIZE and HISTFILESIZE in zsh(1)
#HISTSIZE=10000
#HISTFILESIZE=10000

if [ ! -f $HOME/.bash_history ];then 
  touch $HOME/.bash_history
fi  

# Support .zsh_machine file
if [ -f "${HOME}/.zsh_machine" ]; then
	source "${HOME}/.zsh_machine"
fi
# Support .zsh_machine file

export DOTDROP_PROFILE=$(hostname -s)

if [ -f "${HOME}/.zsh_${DOTDROP_PROFILE}" ]; then
	source "${HOME}/.zsh_${DOTDROP_PROFILE}" ]
fi
if [ -f /tmp/.echo ]; then
	echo "Using: $(pwd)/.zshrc@4"
fi

# keep track of SSH Connections
if [ -z "${LC_SSHConn}" ]; then
  export LC_SSHConn="${USER}@$(hostname -s)"
  export LC_SSHLVLS=0
else
  export LC_SSHConn="$(printf "${LC_SSHConn}\n${SSH_CONNECTION}")"
fi

LC_SSHLVLS="$(printf "${LC_SSHConn}"|grep -v '@'|wc -l|sed -e 's/^ *//')"

export  IsSSH=""
if [[ $(who am i) =~ \(.*\)$ ]]; then
  IsSSH="SSH"
fi

autoload fg_green3 fg_red

if [ "${SHLVL}" = "1" ]; then
  neofetch
else
  if [ "$(ipmine)" = "$(ipext)" ]; then
    IPAddresses="$(fg_red "Ext/Lcl"):$(ipmine)"
  else
    IPAddresses="$(fg_red "Ext") :$(ipext) $(fg_red "Lcl"):$(ipmine)"
  fi
	THISHOST="$(echo "${USER}@$(hostname -s)"| tr '[:upper:]' '[:lower:]')"
	THISHOST="$(figlet -w 130 -k -f banner3-d -d "${FigletDir}" "${THISHOST}")"
  if [ "${USER}" = "root" ]; then
		echo "$(fg_red "${THISHOST}" 2>/dev/null)"
		center_text "$(bg_red "$(repeat_char " " 130)")"
  else
		echo "$(fg_green3 "${THISHOST}" 2>/dev/null)"
		center_text "$(bg_green "$(repeat_char " " 130)")"
  fi
	if [ -f /tmp/.echo ]; then
		echo "Using: $(pwd)/.zshrc@4.1"
	fi
	IPAddresses=$(printf "${IPAddresses// / + }"|sed -e 's/+ + //'|sed -e 's/ + $//')
	printf "${IPAddresses}\n"
fi

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# fix my del key
# Set command line to vi mode after ESC
#set -o vi
# key bindings
bindkey "e[1~" beginning-of-line
bindkey "e[4~" end-of-line
bindkey "e[5~" beginning-of-history
bindkey "e[6~" end-of-history
bindkey "e[3~" delete-char
bindkey "e[2~" quoted-insert
bindkey "e[5C" forward-word
bindkey "eOc" emacs-forward-word
bindkey "e[5D" backward-word
bindkey "eOd" emacs-backward-word
bindkey "ee[C" forward-word
bindkey "ee[D" backward-word
bindkey "^H" backward-delete-word
# for rxvt
bindkey "e[8~" end-of-line
bindkey "e[7~" beginning-of-line
# for non RH/Debian xterm, can't hurt for RH/DEbian xterm
bindkey "eOH" beginning-of-line
bindkey "eOF" end-of-line
# for freebsd console
bindkey "e[H" beginning-of-line
bindkey "e[F" end-of-line
# completion in the middle of a line
bindkey '^i' expand-or-complete-prefix

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

ENHANCD_DISABLE_HOME=1

# put sources that must be last here
source ${ZSH_CUSTOM}/plugins/enhancd/init.sh
source ${ZSH_CUSTOM}/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source ${ZSH}/plugins/bd/bd.zsh

source ~/.zlogin
if [ -f /tmp/.echo ]; then
	echo "Using: $(pwd)/.zshrc@5"
fi

#ENHANCD_COMMAND=ecd; export ENHANCD_COMMAND
# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Update/Download any changes from git.
#checkgit

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
#~/.zlogout
#  finis
#  2020.6.25
