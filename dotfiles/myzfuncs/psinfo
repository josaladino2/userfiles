psinfo () {
	if [ -z ${1} ]; then
		echo "
		Usage: psinfo 
			-A|-e		: Everything in Linux/Unix Format
			au|aux	: Everything in BSD Format
			-ef			: Full format listing
			-x			: My Running Process
			u				: Process by user id
			-g			: Group
			-t			: Show ttys
			-f			: Process tree
			-ff			: Process tree
			-L			: Process Threads
			-fL			: Process Threads
			-p			: Custom pid,ppid,user,cmd
			-C			: Show parent/child processes
			-et			: Execution time
			all			: All processes
			*|''		: All processes"
		return
	else
		case $1 in
			-A|-e) ps -A|egrep "${2}" ;; # Everything in Linux/Unix Format
			au|aux) ps aux|egrep "${2}" ;; # Everything in BSD Format
			-ef) ps -ef|egrep "${2}" ;; # Full format listing
			-x) ps -x|egrep "${2}" ;; # My Running Process
			u) ps u|egrep "${2}" ;; # Process by user id
			-g) ps -fg ${2} ;; # Group
			-t) ps -t ${2} ;; # Show ttys
			-f) ps -e --forest ${2} ;; #Process tree
			-ff) ps -e --forest -C ${2} ;; #Process tree
			-L) ps -fL | egrep "${2}" ;;  # Process Threads
			-fL) ps -fL | egrep "${2}" ;;  # Process Threads
			-p) ps -eo pid,ppid,user,cmd | egrep "${2}" ;;  # Custom pid,ppid,user,cmd
			-C) ps -C ${2} -o pid=  ;; # Show parent/child processes
			-et) ps -eo comm,etime,user | egrep "${2}" ;;  # Execution time
			all) ps -U root -u root ;; # All processes
			*)	ps -axww | head -1 # Old psinfo format
					ps -axww | grep ${1} ;;
		esac
	fi
}
