cpalluserfiles () {
	(
		cd ~
		printf "$(pwd)"
		ScriptName="cpalluserfiles" 
		rm -f ${ScriptName}.*
		StartingHosts=" sneezy " 
		LocalHost="$(hostname -s)" 
		ThisHost="joe@${LocalHost}" 
		SITES="joe@doc cissa@doc admin@doc root@doc joe@sleepy cissa@sleepy admin@sleepy root@sleepy joe@sneezy cissa@sneezy root@sneezy joe@spanky cissa@spanky admin@spanky root@spankys 	cissa@bashful joe@bashful garymartel@bashful root@bashful root@y4x.biz y4x@y4x.biz joe@y4x.biz amanda@y4x.biz bram@y4x.biz d4x@y4x.biz h4hm@y4x.biz joevnc@y4x.biz rejoice2018@y4x.biz t4xbiz@y4x.biz y4xvnc@y4x.biz" 
		SITES2="root@sneezy root@y4x.biz" 
		STARTY4X="root@y4x.biz" 
		FileName="UserFiles.tgz" 
		BackupDir="ufBackup/" 
		SkelDir="/etc/skel/" 
		VerFile=".zsh_shver" 
		OldVer="$(< ${VerFile})" 
		NewVer="$(echo $OldVer + .001 | bc)" 
		ThisVer="$OldVer" 
		RFolder="~/" 
		printf "Current $(fg_cyan "${FileName}") Version:$(fg_green "${OldVer}")"
		printf "
Increment Version:$(fg_green "${OldVer}") to $(fg_red "${NewVer}") (Y/N)? "
		read answer
		if echo "$answer" | grep --color=auto -i --color=auto -iq "^y"
		then
			ThisVer="${NewVer}" 
			echo "${ThisVer}" > ${VerFile}
			cp ${FileName} ${BackupDir}${FileName}-${OldVer}
			printf "  Backup... $(fg_cyan "${FileName}") to $(fg_cyan "${FileName}-${OldVer}")
"
			(
				cd ${BackupDir}
				ls -hF1 --color=auto -1tr | head -n -20 | xargs -d '
' rm -f --
			)
			rm -f mkuserfile.*
			mkuserfile
		else
			ThisVer="${OldVer}" 
		fi
		printf "Update $(fg_cyan "${FileName}") (ver:$(fg_red "${ThisVer}") on $(fg_green "All Machines")? (Y/N) "
		read answer
		if echo "$answer" | grep --color=auto -i --color=auto -iq "^y"
		then
			SECONDS-0
			printf "Updating $(fg_cyan) "${FileName}") Version: $(fg_red "${ThisVer}") to:

"
			for DestUserHost in ${SITES}
			do
				SECONDS=0 
				DestHost=$(printf "${DestUserHost}" | cut -d @ -f2) 
				ServerStatus=$(ping -c1 -W1 ${DestHost} > /dev/null && echo "up" || echo "down") 
				if [[ "${ServerStatus}" =~ "up" ]]
				then
					if [[ "${StartingHosts}" =~ "${LocalHost}" ]]
					then
						if [ ${DestUserHost} != "${ThisHost}" ]
						then
							DestUser=$(echo ${DestUserHost} | cut -d @ -f1) 
							fg_yellow "	${DestUserHost}"
							scp -Cp ${FileName} ${DestUserHost}:${RFolder} > /dev/null
							fg_green "."
							ssh ${DestUserHost} "/usr/local/bin/postcpallusrfiles ${RFolder} >/dev/null"
							fg_green "."
							CatVersion=$(ssh ${DestUserHost} "cat ${RFolder}${VerFile}") 
							fg_green "."
							printf "($(fg_cyan "v:")${CatVersion})(skel)"
							if [[ ${SITES2} =~ "${DestUserHost}" ]] && [ ${DestUser} = "root" ]
							then
								ssh ${DestUserHost} "/usr/local/bin/postcpallusrfiles ${SkelDir} >/dev/null"
								fg_green "."
								CatVersion=$(ssh ${DestUserHost} "cat ${SkelDir}${VerFile}") 
								fg_green "."
								printf "($(fg_cyan "v:")${CatVersion})"
							else
								fg_red " x"
							fi
						else
							fg_yellow "	${DestUserHost} "
							printf "($(fg_red "Skipped"))"
						fi
					else
						printf "Must be on \"$(printf "${StartingHosts}" | sed -e 's/ / or /')\" to update servers
"
						exit 2
					fi
				else
					fg_yellow "	${DestUserHost} "
					printf "($(fg_red "Skipped") server down)"
				fi
				printf " ($(fg_yellow "$SECONDS sec."))
"
			done
		else
			printf "
${ScriptName} cancelled...
"
			echo ${OldVer} > ${VerFile}
		fi
		duration=${SECONDS} 
		echo -e "
**Total update time: $(show_time ${duration})"
	) 2> ${ScriptName}.err
}

