cpallhostsfiles () {
(
cd /etc
ScriptName="cpallhostsfiles"
trash ${ScriptName}.*
StartingHosts=" sneezy "
LocalHost="$(hostname -s)"
ThisHost="joe@${LocalHost}"
SITES="root@doc root@sleepy root@spanky root@bashful root@jumpy"
FileName="hosts"
RFolder="/etc/"
printf "
Update $(fg_cyan "${RFolder}${FileName}") to $(fg_red "${RFolder}${FileName}") on $(fg_green "All Machines")? (Y/N) "
read answer
SECONDS=0
if echo "$answer" | grep -i --color=auto -iq "^y"; then
	start=$(date +'%s')
	printf "Updating $(fg_cyan "${FileName}") to:

"
	for DestUserHost in ${SITES}
	do
		SECONDS=0
		DestHost=$(printf "${DestUserHost}" | cut -d @ -f2)
		ServerStatus=$(ping -c1 -W1 ${DestHost} > /dev/null && echo "up" || echo "down")
		if [[ "${ServerStatus}" =~ "up" ]]; then
			if [[ "${StartingHosts}" =~ "${LocalHost}" ]]; then
				if [ ${DestUserHost} != "${ThisHost}" ]; then
					DestUser=$(echo ${DestUserHost} | cut -d @ -f1)
					fg_yellow "	${DestUserHost}"
					scp -Cp ${FileName} ${DestUserHost}:${RFolder} >/dev/null
					fg_green "."
				fi
			else
				printf "Must be on \"$(printf "${StartingHosts}" | sed -e 's/ / or /')\" to update servers
"
				exit 2
			fi
		else
			fg_yellow "	${DestUserHost} "
			printf "($(fg_reds "Skipped") server down)"
		fi
		printf "($(fg_yellow "$SECONDS sec."))
"
	done
else
	printf "
${ScriptName} cancelled...
"
	echo ${OldVer} > ${VerFile}
fi
duration=${SECONDS}
printf "
$(show_time ${duration} "$(fg_green "**Copy all /etc/hosts files in")")" \
	) 2> ${ScriptName}.err
}
