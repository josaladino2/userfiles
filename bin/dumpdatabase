#! /bin/bash
FileName=$(date +"%Y%m%d")
FileName1=$(date +%Y%m%d --date="1 day ago")
FileName7=$(date +%Y%m%d --date="7 days ago")
SECONDS=0
cd /root/Backup/mysql
# Functions used
. ~/.bash_functions

function backupnow () {
	local db=${1}
	local errors=0
	local ThisFile="${db}-${FileName7}.sql.gz"
	printf "***${db}\n"
	printf "Deleting Old $(pwd)/${ThisFile}"
	rm ${ThisFile} >/dev/null 2>&1 && \
		printf " OK\n" || { printf " Errors.\n"; }
	printf "Deleting Old OneDrive:/MySQL-Backups/${ThisFile}"
	rclone deletefile --drive-use-trash=false \
		OneDrive:/MySQL-Backups/${ThisFile} >/dev/null 2>&1 && \
		printf " OK\n" || { printf " Errors.\n"; }
	ThisFile="${db}-${FileName}.sql.gz"
	printf "Deleting Any Current OneDrive:/MySQL-Backups/${ThisFile}"
	rclone deletefile --drive-use-trash=false \
		OneDrive:/MySQL-Backups/${ThisFile} >/dev/null 2>&1 && \
		printf " OK\n" || { printf " Errors.\n"; }
	printf "Exporting ${db} database to ${ThisFile} "
	if [ "${db}" = "all" ]; then
		/usr/bin/mysqldump -uroot -pbokstari46 --all-databases | \
			gzip -c > ${ThisFile}
	else
		/usr/bin/mysqldump -uroot -pbokstari46 --databases ${db} | \
			gzip -c > ${ThisFile}
	fi
	result=$?
	if [ $result -eq 0 ]; then
		printf " OK\n"
	else
		printf " Errors.\n"
		errors=$((errors+1))
	fi
	printf "Transferring ${ThisFile} to OneDrive:/MySQL-Backups/"
	rclone copyto ${ThisFile} OneDrive:/MySQL-Backups/${ThisFile} && \
		printf " OK\n" || { printf " Errors.\n"; errors=$((errors+1)); }
	printf "\n${db} DB Backups/Transfer with ${errors} errors.\n\n"
}
for DB in $(mysql -e 'show databases' -s --skip-column-names); do
	if [ "$DB" = "information_schema" ] || \
		[ "$DB" = "performance_schema" ]; then
		:
	else
		backupnow ${DB}
	fi
done
backupnow "all"
printf "***rclone lsf for OneDrive:/MySQL-Backups/*${FileName1}.* files.\n"
rclone lsf --format "tsp" --separator "	" OneDrive:/MySQL-Backups/ \
	--include "*${FileName1}.*"
printf "\n***rclone lsf for OneDrive:/MySQL-Backups/*${FileName}.* files.\n"
rclone lsf --format "tsp" --separator "	" OneDrive:/MySQL-Backups/ \
	--include "*${FileName}.*"
printf "\n***About/Size of OneDrive:\n"
rclone about OneDrive:/
# Show time to do the transfer
duration=${SECONDS}
echo -e "\n**Backup Transfer completed in $(show_time ${duration})"
