#!/usr/local/bin/zsh
# copy file from .file to ~/dotfiles/file
# 	assumes the desired ${SrcFile} is in the ${SrcDir}
type emulate >/dev/null 2>/dev/null || alias emulate=true
emulate -L ksh
if [ -z ${1} ]; then
  echo "Usage: dotimport .dotfile 'Assumes $HOME directory'" 
else
	case ${1:0:2} in
		-f) Force="Y"
				shift	;;
	esac
	SrcDir=${HOME}
	GitDir="${HOME}/.dotfiles"
	Exclude=".bash_history .zsh_$(hostname -s)_hist  .bashdb_hist .zshdb_hist .bash_sessions .zshrc.zwc .zsh_shver "
	for i in "$@"
	do
		SrcFile="${i}"
		GitFile=$(echo ${SrcFile}|sed -e 's/\.//')
		if [[ "${Exclude}" == *"${i} "* ]]; then
			echo "$(fg_red1 "Skipping") ${SrcDir}/${SrcFile}"
		elif [ ! -e ${SrcDir}/${SrcFile} ]; then
			echo "$(fg_red1 "Error:") ${SrcDir}/${SrcFile} does not exist."
		elif [ -e ${GitDir}/${GitFile} ]; then
			echo "$(fg_red1 "Error:") ${GitDir}/${GitFile} already exists!"
		else
			echo "$(fg_yellow "Moving") ${SrcDir}/${SrcFile} $(fg_green "to") ${GitDir}/${GitFile}"
			mv ${SrcDir}/${SrcFile} ${GitDir}/${GitFile}
			echo "$(fg_yellow "Linking") ${GitDir}/${GitFile} $(fg_green "to") ${SrcDir}/${SrcFile}"
			ln -s ${GitDir}/${GitFile} ${SrcDir}/${SrcFile}
		fi
	done
fi
