#!/usr/local/bin/zsh
# ~/bin/rclonemount-All
#		Assumes that you want all drives mounted
#		Unmounting first gives Drive a fresh mount
PATH="~/.myzfuncs:${PATH}"
if [ "$(uname)" = "Darwin" ]; then
	CloudDir="/Users/joe/Cloud"
else
	CloudDir=/home/Cloud
fi
cd ${CloudDir}
sizemount () {
	checkmount () {
		if [[ $(/bin/ps axww | egrep "umask=0.*${1}:" | egrep -v "egrep") ]]; then
			printf "${1} ** is $(fg_green "Mounted...") **\n"
		else
			printf "${1} ** is $(fg_red "NOT Mounted...") **\n"
		fi
	}
	echo "${1} $(checkmount ${1})"
	echo "size: V" 
	rclone about ${1}:|sed -e 's/^/   /'
	echo
}

for i in ${@:-all}; do
	case ${i} in
		all)
			# Checking Google Drive
			sizemount GDrive

			# Checking Google Drive BC
			sizemount GDriveBC

			# Checking Mega Drive
			sizemount Mega

			# Checking DropBox
			sizemount DropBox

			# Checking nc-cissa
			sizemount nc-cissa

			# Checking nc-joe
			sizemount nc-joe

			# Checking OneDrive
			sizemount OneDrive

			# Checking OneDriveST
			sizemount OneDriveST

			# Checking OneDriveCS
			sizemount OneDriveCS
		;;

		GD)
			# Checking Google Drive
			sizemount GDrive
		;;

		GDBC)
			# Checking Google Drive BC
			sizemount GDriveBC
		;;

		Mega)
			# Checking Mega Drive
			sizemount Mega
		;;

		DB)
			# Checking DropBox
			sizemount DropBox
		;;

		ncc|nc-cissa)
			# Checking nc-cissa
			sizemount nc-cissa
		;;

		ncj|nc-joe)
			# Checking nc-joe
			sizemount nc-joe
		;;

		OD)
			# Checking OneDrive
			sizemount OneDrive
		;;

		ODST)
			# Checking OneDriveST
			sizemount OneDriveST
		;;

		ODCS)
			# Checking OneDriveCS
			sizemount OneDriveCS
		;;

		*)
			echo "${i} not found.  Usage: $0 [all|GD|GDBC|Mega|DB|ncc|ncj|OD|ODST|ODCS]"
		;;
	esac
done
echo ""
