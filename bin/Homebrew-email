#!/usr/local/bin/zsh
# $1 "Body of Email"
# $2 "Subject of Email"
# $3 SENDTO
# $4 FULLNAME
ERR_FILE="${HOME}/Homebrew-update.err"
OUT_FILE="${HOME}/Homebrew-update.out"
ERR_FILE2="${HOME}/Homebrew-upgrade.err"
OUT_FILE2="${HOME}/Homebrew-upgrade.out"
#ERR_FILE3="${HOME}/Homebrew-update-cask.err"
#OUT_FILE3="${HOME}/Homebrew-update-cask.out"
#ERR_FILE4="${HOME}/Homebrew-upgrade-cask.err"
#OUT_FILE4="${HOME}/Homebrew-upgrade-cask.out"
TMP_FILE="${HOME}/Homebrew-tmp.out"
printf "$(hostname)-Homebrew Update/Upgrade Output (w/ cask)\n" > ${TMP_FILE}
EERR_FILE="${HOME}/Homebrew-email.err"
EOUT_FILE="${HOME}/Homebrew-email.out"
export Mail_to="${3:-joe@bram.net}"
export Mail_fullname=${4:-"Joe Saladino"}
# Starting processing the output files
if [ ! -s ${ERR_FILE} ]; then
	/usr/bin/printf "No Update Errors\n" > ${ERR_FILE}
fi
if [ ! -s ${OUT_FILE} ]; then
	/usr/bin/printf "All Updates are up-to-date.\n" > ${OUT_FILE}
fi
if [ ! -s ${ERR_FILE2} ]; then
	/usr/bin/printf "No Upgrade Errors\n" > ${ERR_FILE2}
fi
if [ ! -s ${OUT_FILE2} ]; then
	/usr/bin/printf "All Upgrades up-to-date.\n" > ${OUT_FILE2}
fi
#if [ ! -s ${ERR_FILE3} ]; then
#	/usr/bin/printf "No Cask Upgrade Errors\n" > ${ERR_FILE3}
#fi
#if [ ! -s ${OUT_FILE3} ]; then
#	/usr/bin/printf "All cask Upgrades are up-to-date.\n" > ${OUT_FILE3}
#fi
#if [ ! -s ${ERR_FILE4} ]; then
#	/usr/bin/printf "No Cask Upgrade Errors\n" > ${ERR_FILE4}
#fi
#if [ ! -s ${OUT_FILE4} ]; then
#	/usr/bin/printf "All cask Upgrades are up-to-date.\n" > ${OUT_FILE4}
#fi
# Begin Constructing Email BODY
# brew update
( printf "\n++++++ Begin *Update Error* File\n" 
	cat ${ERR_FILE}
	printf "++++++ End *Update Error* File\n"
	printf "\n====== Begin *Update Output* File\n"
	printf "brew update\n"
	printf ""
	cat ${OUT_FILE}
	printf "====== End *Update Output* File\n"
# brew upgrade
	printf "\n++++++ Begin *Upgrade Error* File\n"
	printf ""
	cat ${ERR_FILE2}
	printf "++++++ End *Upgrade Error* File\n"
	printf "\n====== Begin *Upgrade Output* File\n"
	printf "brew upgrade\n"
	printf ""
	cat ${OUT_FILE2}
	printf "====== End *Upgrade Output* File\n" ) >> ${TMP_FILE}
## brew upgrade Casks
#	printf "\n++++++ Begin *Update Cask Error* File\n"
#	printf "brew update --cask\n"
#	printf ""
#	cat ${ERR_FILE3}
#	printf "++++++ End *Update Cask Error* File\n"
#	printf "\n====== Begin *Update Cask Output* File\n"
#	printf ""
#	cat ${OUT_FILE3}
#	printf "====== End *Update Cask Output* File\n"
## brew upgrade Casks
#	printf "\n++++++ Begin *Upgrade Cask Error* File\n"
#	printf "brew upgrade --cask\n"
#	printf ""
#	cat ${ERR_FILE3}
#	printf "++++++ End *Upgrade Cask Error* File\n"
#	printf "\n====== Begin *Upgrade Cask Output* File\n"
#	printf ""
#	cat ${OUT_FILE3}
#	printf "====== End *Upgrade Cask Output* File\n"
# Final Email Variables Setup
SUBJECT="${2:-"$(hostname)-Homebrew Update/Upgrade (w/ Cask) Output"}"
# Send Email to Administrator
	/usr/bin/mail -s "${SUBJECT}" ${Mail_to} < ${TMP_FILE} > ${EERR_FILE} 2> ${EOUT_FILE}
	printf "$(hostname)-Homebrew Update/Upgrade Email Errors\n" > ${TMP_FILE}
if [ -s ${EERR_FILE} ]; then
( printf "\n++++++ Begin *Email Error* File\n" 
	cat ${EERR_FILE}
	printf "++++++ End *Email Error* File\n"
	printf "\n====== Begin *Email Output* File\n"
	printf ""
	cat ${EOUT_FILE}
	printf "====== End *Email Output* File\n" ) >> ${TMP_FILE}
	# Email Variables Setup
	SUBJECT="$(hostname)-Homebrew *Email* Errors"
# Send STDERR file to Administrator
	/usr/bin/mail -s "${SUBJECT}" ${Mail_to} < ${TMP_FILE} > /dev/null 2>&1
	rm ${EERR_FILE} ${ERR_FILE} ${ERR_FILE2} # ${ERR_FILE3} ${ERR_FILE4} 
fi
