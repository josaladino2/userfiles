#!/usr/local/bin/zsh
fpath=(${myzfuncs} ${fpath});
autoload ${myzfuncs}/*
autoload show_time

function rcpurge () {
	local cmd=${1}
	local RFileName="${2}+${day}"
  local result=0
	printf "${Dest}/${RFileName}..."
	rclone lsf ${Dest}/${RFileName} >/dev/null 2>&1
	result=$?
	if [ ${result} -eq 0 ]; then
		rclone ${cmd} --drive-use-trash=false ${Dest}/${RFileName} && \
			printf "Deleted.\n" || { printf "Delete Errors.\n";
				d_errors=$((d_errors+1)); }
		sleep 5
	else
		echo "Does not exist."
	fi
}

function rcsync () {
	local cmd=${1}
	local FileName=${2}
	local RFileName="${FileName}+${day}"
  local result=0
	printf "${Dest}/${RFileName} transfer..."
	rclone ${cmd} ${FileName} ${Dest}/${RFileName}
	result=$?
	if [ ${result} -eq 0 ]; then
		printf "OK\n"
	else
		printf "FAILED!\n"
		t_errors=$((t_errors+1))
		exit 1
	fi
}

SECONDS=0
cd /cpbackup/
FileDate="${1:-$(date +%F)}"

# Work starts here
if [ -e ${FileDate} ]; then
	date
	FileDate7="${1:-$(date +%F --date='7 days ago')}"
	day="$(echo ${FileDate} | date +%u)"
	RStorage="GDrive:"
	Dest="${RStorage}/y4x-cPanelBackups"
	d_errors=0
	t_errors=0
	# Start /cpbackup/ cleanup
	echo -e "\n** ${Dest}/ Cleanup"
	rcpurge purge "${FileDate7}"
	rcpurge purge "${FileDate}"
	rcpurge purge ".meta" 
	rcpurge deletefile "transports.db" 
	# Start cpanel backup transfer to ${RStorage}
	echo -e "\n** /cpbackup/ Treansfers"
	( echo -e "\n** Local /cpbackup/${FileDate} Size:"
	rclone size /cpbackup/${FileDate} ) >/tmp/checksize 2>&1
	rcsync sync ".meta" 
	rcsync copyto "transports.db" 
	rcsync sync "${FileDate}"
	result=$?
	# Remove local files from /cpbackup/
	if [ ${result} -eq 0 ]; then
		rm -rf .meta ${FileDate} transports.db >/devnull 2>&1
		echo -e "\n** /cpbackup/${FileDate}, .meta, .transports.db Deleted"
	else
		{ echo "${Dest}/${FileDate}+${day} transfer FAILED!";
			echo "Local files NOT Deleted.";
			t_errors=$((t_errors+1)); }
	fi
	# Report ${FileDate} folder size
	cat /tmp/checksize
	echo -e "\n** ${RStorage} ${FileDate}+${day} Size:"
	rclone size ${Dest}/${FileDate}+${day}
	echo -e "\n** ${Dest}"
	rclone lsf --format "tsp" --separator '	' ${Dest}
	# Report space left on ${RStorage}
	echo -e "\n** ${RStorage} Space:"
	echo "$(rclone about ${RStorage})"
	# Show number of t_errors during Backup transfer.
	echo -e "\nDelete Files completed with ${d_errors} Delete errors.\n"
	echo "Daily Backup completed with ${t_errors} Transfer errors."
else
	echo "No /cpbackup/${FileDate} backup to transfer."
fi
	# Show time to do the transfer
duration=${SECONDS}
echo -e "\n** Backup Transfer completed in $(show_time ${duration})\n"
# End post_cpbackup transfer
