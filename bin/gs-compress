#!/usr/local/bin/zsh
if [ -z ${1} ]; then
	printf "Usage: ${Funcstack[1]} FileName.pdf\n"
else
	source ~/.zsh_functions
	source ~/.zsh_colors_f
	Quality="screen"
	for i in $@
	do
		SECONDS=0
		OldFile=${i}
		NewFile=$(echo ${OldFile}|sed -e 's/.pdf/N.pdf/')
		rm ${NewFile} >/dev/null 2>&1 # remove NewFile from previously failed gs-compress run
		#	-dPDFSETTINGS=/screen (72 dpi images)
		#	-dPDFSETTINGS=/ebook (150 dpi images)
		#	-dPDFSETTINGS=/printer (300 dpi images)
		#	-dPDFSETTINGS=/prepress (300 dpi images, color preserving)
		#
		# Unused parameters for gs
		#		-dNumRenderingThreads=2 \
		#
		printf "Saving ${OldFile}..."
		/usr/local/bin/gs \
			-sDEVICE=pdfwrite \
			-dCompatibilityLevel=1.4 \
			-dPDFSETTINGS=/${Quality} \
			-sPAPERSIZE=letter \
			-dNumRenderingThreads=2 \
			-dBufferSpace=1000000000 \
			-dNOPAUSE \
			-dBATCH \
			-q \
			-sOutputFile=${NewFile} \
			${OldFile}
		result=$?
		if [[ $result -eq 0 ]]; then
			A=$(fsize ${OldFile})
			B=$(fsize ${NewFile})
			duration=${SECONDS}
			printf "$(fg_green "OK")$(fg_yellow "${A}") to$(fg_yellow "${B}")\n"
			printf "\t$(show_time ${duration} "$(fg_green "Time")")\n"
			A=$(fsize2 ${OldFile})
			B=$(fsize2 ${NewFile})
			if $(islarger $A $B); then
				printf "\tOldFile is *larger* than NewFile - $(fg_green "Using NewFile")\n"
				rm ${OldFile}
				mv ${NewFile} ${OldFile}
			else
				printf "\tOldFile is *smaller* than NewFile - $(fg_yellow "Keeping OldFile")\n"
				rm ${NewFile}
			fi
		else
			printf "Compression ${OldFile} to ${NewFile} $(fg_red "Failed.")\n"
		fi
	done
fi
